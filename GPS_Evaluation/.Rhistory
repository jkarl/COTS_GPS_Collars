meanLat - gps.data.u11$Lat
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(rgdal)
library(dplyr)
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "Sparkfun_GPS\\003.GPSLOG.20180330.csv"
title <- "5-min Outdoor"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/29')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.9)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.9)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.9)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
Summary(plot.df)
summary(plot.df)
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")
g
View(plot.df)
View(plot.df)
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "uBlox_neo6\\002.GPSLOG.20180329.csv"
title <- "5-min Outdoor"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/29')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.9)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.9)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "uBlox_neo6\\002.GPSLOG.20180329.csv"
title <- "5-min Outdoor"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/25')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.9)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.9)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
names(plot.df)
mean(plot.df$diffdist)
hist(plot.dfdifdist, break=20)
hist(plot.df$difdist, break=20)
hist(plot.df$difdist, breaks=20)
hist(plot.df$diffdist, breaks=20)
?qantile
?quantile
quantile(plot.df$diffdist,0.95)
quantile(iGotU.plot.df$diffdist,0.95)
library(geosphere)
?distGeo
test <- distGeo(c(plot.df$Lon,plot.df$Lat),c(mean(plot.df$Lon),mean(plot.df$Lat)))
c(mean(plot.df$Lon),mean(plot.df$Lat))
test <- distGeo(gps.data.u11,c(mean(plot.df$Lon),mean(plot.df$Lat)))
test <- distGeo(gps.data,c(mean(gps.data$Lon),mean(gps.data$Lat)))
summary(test)
hist(test, breaks=20)
quantile(test,0.95)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(rgdal)
library(dplyr)
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "uBlox_neo6\\002.GPSLOG.20180329.csv"
title <- "5-min Outdoor"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/25')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
?stat_ellipse
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95, type="euclid")+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=quantile(plot.df$diffdist,0.95), type="euclid")+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "GPSLOG_5min_Outdoor.20180313.csv"
title <- "5-min Outdoor"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/25')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=quantile(plot.df$diffdist,0.95), type="euclid")+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
quantile(plot.df$diffdist, 0.95)
quantile(plot.df$diffdist, 0.05)
quantile(plot.df$diffdist, 0.5)
?distGeo
test
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "Sparkfun_GPS\\001.GPSLOG.20180330.csv"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/25')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "Sparkfun_GPS\\001.GPSLOG.20180330.csv"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/25')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=quantile(plot.df$diffdist,0.95), type="euclid")+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
plot.df$diffdist
View(plot.df)
plot(plot.df$Lon,plot.df$Lat)
# Load Data from COTS prototype
path <- "C:\\Users\\Jason Karl\\Documents\\GitHub\\COTS_GPS_Collars\\COTS_GPS_Collars\\GPS_Evaluation"
file <- "Sparkfun_GPS\\001.GPSLOG.20180330.csv"
colNames <- c("HDOP","Lat","Lon","NumSat","UTCDate","UTCTime","FirstFix","LastFix","BestFix")
gps.data <- read.csv(paste(path,file,sep="\\"),header=T,col.names=colNames,stringsAsFactors=F)
# Filter to remove blanks
gps.data <- gps.data[gps.data$Lon!=0,]
# Reproject lat/lon data to UTM Zone 11
coordinates(gps.data) <- ~Lon+Lat
proj4string(gps.data) <- CRS("+proj=longlat +datum=WGS84")
gps.data.u11 <- spTransform(gps.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
## Load the iGotU data
iGotU.file <- "iGotU_unit5_test.csv"
iGotU.data <- read.csv(paste(path,iGotU.file,sep="\\"),header=T,stringsAsFactors=F,fileEncoding = "UTF-16LE")
## remove the blanks from the iGotU data and filter to one day
iGotU.data <- iGotU.data %>% filter(Latitude > 0 & Date == ' 2018/03/25')
# Reproject iGotU data to UTM 11N
coordinates(iGotU.data) <- ~Longitude+Latitude
proj4string(iGotU.data) <- CRS("+proj=longlat +datum=WGS84")
iGotU.data.u11 <- spTransform(iGotU.data, CRS=CRS("+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Calc difference from average coordinates for COTS unit
meanLat <- mean(gps.data.u11$Lat)
meanLon <- mean(gps.data.u11$Lon)
sdLat <- sd(gps.data.u11$Lat)
sdLon <- sd(gps.data.u11$Lon)
gps.data.u11$diffLat <- meanLat - gps.data.u11$Lat
gps.data.u11$diffLon <- meanLon - gps.data.u11$Lon
gps.data.u11$diffdist <- sqrt(gps.data.u11$diffLat^2+gps.data.u11$diffLon^2)
# Calc difference from average coordinates for COTS unit
meanLat <- mean(iGotU.data.u11$Latitude)
meanLon <- mean(iGotU.data.u11$Longitude)
sdLat <- sd(iGotU.data.u11$Latitude)
sdLon <- sd(iGotU.data.u11$Longitude)
iGotU.data.u11$diffLat <- meanLat - iGotU.data.u11$Latitude
iGotU.data.u11$diffLon <- meanLon - iGotU.data.u11$Longitude
iGotU.data.u11$diffdist <- sqrt(iGotU.data.u11$diffLat^2+iGotU.data.u11$diffLon^2)
plot.df <- data.frame(gps.data.u11)
iGotU.plot.df <- data.frame(iGotU.data.u11)
#g1 <- ggplot(data=plot.df, aes(x=FixTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$FixTime/1000, 0.9))+
#  labs(title=paste("Time to First Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g1
#g2 <- ggplot(data=plot.df, aes(x=BestTime/1000))+geom_histogram(binwidth=5)+
#  geom_vline(xintercept = quantile(plot.df$BestTime/1000, 0.9))+
#  labs(title=paste("Time to Best Fix",title,sep=" - "), x="Seconds", y="# of Fixes")
#g2
g <- ggplot(data=plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=quantile(plot.df$diffdist,0.95), type="euclid")+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="COTS GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g
g.iGotU <- ggplot(data=iGotU.plot.df, aes(x=diffLon,y=diffLat))+geom_point(color="grey")+
stat_ellipse(level=0.95)+geom_hline(yintercept = 0) + geom_vline(xintercept = 0)+
xlim(c(-50,75))+ylim(c(-50,50))+
labs(title="iGotU GPS positional error", x="Difference from Avg Longitude (m)", y="Difference from Avg Latitude (m)")
g.iGotU
